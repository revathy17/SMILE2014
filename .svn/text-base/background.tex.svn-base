
\section{Background}
\label{sec:background}

\subsection{Distributed Social Networks and PubSubHubbub}
\label{sec:pubsubhubbub}

%The motivation behind approching towards Distrbuted Social Networks are data potability, privacy and scalability. 
Centralized Social Networks (CSN) such as Facebook, Myspace and Twitter suffer drawbacks such as those mentioned in Section \ref{sec:Introduction}. 
%JULIA: we have repeated 4 times privacy and scalability until hereand ref mentioned only in 1 paragraph after
%Changed this
For instance, the growing number of Twitter users has been a continuous concern for the performance of the service\footnote{\url{http://mashable.com/2010/06/11/twitter-engineering-fail/}}. Issues related to the sharing of personal information with third party websites by Facebook\footnote{\url{http://www.adweek.com/news/advertising-branding/facebook-facing-more-privacy-issues-126296}} or Twitter retweet issues \cite{widespread2010} 
have defeated the privacy mechanisms of these services. 
These lead to new approaches to engineer Online Social Networks (OSN), termed as Distributed Social Networks (DSN) \cite{Yeung2009Decentralisations}. 
%JULIA: what about Decentralized Social Networks or Federated Social Networks?. It's not the same, but I guess too much for this paper.
%% Alex -> let's keep like that for now
While CSNs store users' data in their own servers and owns user's data as per Terms of Service, DSNs %--- such as PeerSon\footnote{http://www.peerson.net/}, StatusNet, rstat.us\footnote{http://rstat.us} and SMOB --- 
%% Alex -> I commented the previous one to save footnotes and as we already introduced the main ones in the previous section
distribute the data across users, emphasizing on data portability and interoperability. In addition, they promote ownership of users' data, as data resides either on a trusted server or on a local computer.

Implementing DSN requires various layers, including one to transmit data between users' platform. A common way to do this is Google's PubSubHubbub
%% Alex - footnote removed as we have the [REF] before
%\footnote{http://code.google.com/p/pubsubhubbub/} 
(PuSH), a decentralized publish-subscribe protocol which extends Atom/RSS to enable real-time streams. It allows one to get near-instant notifications of the content (s)he is subscribed to, as PuSH immediately ``pushes'' new data from publisher to subscriber(s) where RSS readers must periodically ``pull" new data.
The PuSH ecosystem consist of a few \emph{hubs}, many \emph{publishers}, and a large number of \emph{subscribers}. Hubs enable \begin{inparaenum}[(1)]
  \item publishers to offload the task of broadcasting new data to subscribers; and
  \item subscribers to avoid constantly polling for new data, as the hub pushes the data updates to the subscribers.
\end{inparaenum}
%% Alex - 
In addition, the protocol handles the communication process between publishers and subscribers:\begin{enumerate}
  \item A subscriber pulls a feed (Atom/RSS) from a publisher (a ``topic'' in the PuSH terminology). In its header, the feed refers to a hub where the subscriber must register to get future notifications about publisher's updates;
  \item The subscriber registers to the feed at the hub's URL. This process is automatically done by the subscriber the first time the feed is accessed;
  \item The publisher notifies the hub whenever new content is published --- also, the hub can check for updated directly from the publisher by pulling its feed; %feed from the publisher and checks for any updates in the feed from the previous broadcast.
  \item Finally, when new content is generated by the publisher, the hub sents updates to all its subscribers for this feed.
\end{enumerate}
%JULIA: are ok here the stats from Brett?. But we can not give a reference that proves that :(
%% Alex - Since he's a co-author, people will trust that
%% Alex - I rephrased a bit and put that later so that reader know what is a hub before reading the stats
PuSH is a scalable protocol, and Google provides a public hub that people can use to broadcast their content\footnote{\url{http://pubsubhubbub.appspot.com/}}. 
This public hub delivers for approximately 40 million unique active feeds, with 117 million subscriptions. In two years, approximately 5.5 billion unique feeds have been delivered, fetching 200 to 400 feeds and delivering 400 to 600 of them per second. Its largest subscribers get between 20 and 120 updates per second from the hub.

%The next step towards improving OSN's is enabling machine readability by modelling social data using Semantic Web vocabularies. 

\subsection{Semantics in Distributed Social Networks}
\label{sec:backfoaf}

%In this section we restrict the explanation to two Semantic Web vocabularies FOAF\footnote{http://www.foaf-project.org}, SIOC \footnote{http://sioc-project.org} that are widely used to model data on social networks. 

Within DSN, individuals mapped to each other with their social relationships form what is generally termed as a ``social graph'', that became popular with OSNs such as Facebook. OSNs and other Social Web services take advantage of the relationships between individuals to provide better and more personalized online experience. In \cite{socialgraph2007}, Brad Fitzpatrick, founder of the LiveJournal blogging community\footnote{\url{http://livejournal.com}}, discussed his views on building a \textit{decentralized social graph} and the aggregation of individual's friends across sites. 

Lightweight semantics can play an important role in social graphs and DSN, allowing to share content between users whether or not they are on the same system.
FOAF \cite{foaf2004} --- Friend of a Friend ---  is generally used to represent information about individuals (name, e-mail, interests, etc.) and their social relations in a machine readable format. Generally combined with FOAF, SIOC \cite{sioc2009} --- Semantically-Interlinked Online Communities --- is a lightweight vocabulary used (in combination with several of its modules) to represent social data and user activities (blog posts, wiki edits, etc.) in RDF.
% Alex - no need to reference RDF in this community
%\footnote{\url{http://www.w3.org/RDF/}}. %It is most commonly used with FOAF, therefore interlinking individual's profile information with his activities on social networks in RDF. 
To a larger extent, vocabularies such as the Open Graph Protocol\footnote{\url{http://ogp.me}}, or schema.org\footnote{\url{http://schema.org}} could be considered to model the objects being manipulated and shared by users (movies, photos, etc.) --- especially as they may have a larger uptake than the previous ones at Web-scale.

\subsection{WebID}
\label{sec:webid}

To enable users privacy and secure communications in a DSN, an authentication protocol is required.
WebID \cite{webid2009} is an decentralized authentication protocol that allows users to manage their own identities and data privacy. It uses X.509 certificates and SSL certificate exchange mechanisms to provide an encrypted communication channel and ensures that users are who they claim, represented by a WebID URI --- generally identifying a \texttt{foaf:Person}.
% Alex- space saving
%WebID In the current protocol version user profiles are represented by FOAF. 
Hence, FOAF relation may be enhanced with trust descriptions so as to create a reputation network. Moreover, this trust network can be backed by the use of cryptographic keys and digital signatures, so as to form a secure \emph{Web of Trust}\footnote{\url{http://xmlns.com/wot/0.1/}}.

%JULIA: one reviewer wanted here link to WoT ontology or project, though Web Of Trust is also an abstract concept, include this instead? http://blogs.oracle.com/bblfish/entry/more_on_authorization_in_foaf,
%% Alex -> better to include the previous URL as this is the one we're talking about(at least in the FOAF-SSL community)

%The exchange of private FOAF information by the users in our protocol forced us to authenticate the requesters of the FOAF profile. This formed the basis for us to implement the WebID \cite{webid2009} protocol. WebID is an authentication protocol that allows users to manage their own identities and data privacy. It uses X.509 certificates and SSL certificate exchange mechanism, and is compatible with existing SSL/TLS implementations.
%WebID is generally combined with FOAF so that the identity is tied with the user social profile

It can also be used for authorization purposes in conjunction with other vocabularies and ontologies such as, Privacy Preference Ontology (PPO) \cite{privacypref2010} to provide a fine grained access control.
In a nutshell, the protocol works as follows:
\begin{enumerate}
  \item A client sends its X509 certificate (including his WebID URI) to a server;
  \item The server extracts the public key and the URI entries from certificate;
  \item The server dereferences the URI and extracts a public FOAF profile;
  \item The server attempts to verify the public key information. 
  %% Alex -> can we rewrite this in less words ?
  If the public key in the certificate is part of the public keys associated with the URI, the server assumes that the client uses this public key to verify their ownership of the WebID URI;
  \item The client is authenticated, authorization mechanism can be applied.
\end{enumerate}

\subsection{PPO - The Privacy Preference Ontology}
\label{sec:ppo}

By itself, WebID does not determine what kind of access an authenticated user has on a resources. Yet, it can be combined with authorization mechanisms to provide such access control. 
% Alex - saving space
%\footnote{http://www.duke.edu/~rob/kerberos/authvauth.html}.
%JULIA: the reviewer seemed to don't understand the difference between authentication and authorization. Explain better instead of footnote?
%% Alex - if you can do that in one line *in the text*, yes that'd be nice
%The need to model the privacy settings created by users to control the dissemination of their content encouraged us to use Privacy Preference Ontology \cite{privacypref2010}. 
The Privacy Preference Ontology~\cite{privacypref2010} (PPO) is a lightweight vocabulary built on Web Access Control ontology \cite{wacl} to provide fine-grained restrictions to access RDF data. %
%% Alex - saving space
%% resources, statements and named graphs. 
%In our work, we restrict the scope to create access preferences only to resources. 
It consists of a main class \texttt{PrivacyPreference} with properties defining \begin{inparaenum}[(1)]
  \item the resource to be restricted;
  \item the conditions to create the privacy preferences;
  \item the access privileges and;
  \item the attribute patterns that must be satisfied by the requester --- also known as access space. 
\end{inparaenum}
Access Spaces are SPARQL queries, checking FOAF profiles of the requesters to grant access (or not) to some data, so that FOAF plays a central role in the authorization process. 
%% Alex - saving space . Therefore, the FOAF profiles of the users play a crucial role in attempting to access a certain content. 

For instance, in a scenario when Alice requests to access to Bob's information (\textit{e.g.} a microblog post), Bob's privacy preference for the corresponding resource are checked. If the access spaces for this preference matches Alice's description (from her FOAF profile), she will gain access to the requested data. A resource can have multiple access spaces, and access is granted if one's profile matches at least one of the access spaces.  
%There are classes and properties in PPO for specifying access control privileges to grant read and write permissions on resources to the users, but this is beyond the scope of our work.     

%This vocabulary provides the ability (1) to restrict access to resources, statements and named graphs; (2) conditions to refine the restrictions; (3) to specify the users that can access the data depending on whether they satisfy a certain SPARQL query; and (4) and to specify access control privileges granted to users that can access the data.
